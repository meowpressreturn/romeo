package romeo.importdata;

import java.util.Iterator;
import java.util.List;
import java.util.Map;

/**
 * Represents a file of unit information for import into Romeo (such as from the
 * csv files generated by UC). This is an intermediate format that can be
 * processed further by an IUnitImporter to create and update Unit values in the
 * database.
 */
public interface IUnitFile {
  /**
   * Return an iterator over the units in the unit file. Each unit is
   * represented by a Map, whose keys correspond to values in the columns array.
   * One of these values is considered as the name, and the key for this is
   * specified in the nameColumn property (usually "name"). Units missing such a
   * value in their map for this key will not be included the unit file.
   * @return iterator An iterator that returns Map instances
   */
  public Iterator<Map<String, String>> iterator();

  /**
   * Returns a List of names (String) of rows included in the file.
   * @return names A List of String
   */
  public List<String> getNames();

  /**
   * Return the map for a particular unit. These are keyed by the column whose
   * name is specified in the nameColumn property.
   * @param name
   */
  public Map<String, String> getRow(String name);

  /**
   * Returns an array containing the keys for the properties of an individual
   * unit in the unit file. Generally these would correspond with properties in
   * the Unit class, though there may be additional properties not modeled in
   * Romeo, or there may be properties missing that romeo models such as
   * acronymn.
   * @return columns
   */
  public String[] getColumns();

  /**
   * Returns the name of the column that provides the key for looking up a unit.
   * @return nameColumn
   */
  public String getNameColumn();
}
